@use '../../../../variables' as *;

.container {
  display: flex;
  flex-direction: column;
  gap: $space-sm; // Small gap between the header and the content area
  font-family: $font-family;
  overflow: hidden;
  // Ensures the card stands out slightly
  // We don't need a heavy background since the main post container already has one,
  // but we ensure text colors are correct.

  .Header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: $space-md;
    // Delegate user info styling to the child component
    app-user-header {
      flex-shrink: 0; // Prevent the user header from shrinking
    }

    .infos {
      display: flex;
      align-items: center;
      justify-content: flex-start;

      .time {
        color: $muted-light;
        font-size: 0.85rem;
        flex-shrink: 0;
      }
    }

  }

  .content {
    // This style block creates the distinct, rounded rectangle for the comment body
    background-color: $background-light;
    color: $text-light;
    padding: $space-md;
    border-radius: $border-radius-lg;
    line-height: 1.5;
    font-size: 0.95rem;
    font-weight: $body-font-weight;
    overflow-wrap: break-word;
    white-space: normal;
    // Use a lighter shadow to differentiate it from the main post container
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.04);
  }
}


.emoji-wrapper {
  position: relative;
  /* so the picker can be positioned relative to the button */
  display: inline-block;
}

.emoji-wrapper {
  position: relative;
  display: inline-block;
}

.emoji-btn {
  cursor: pointer;
  background: transparent;
  border: none;
  padding: $space-xs;
  color: $primary;
  transition: color 0.2s ease;
  flex-shrink: 0;

  &:hover {
    opacity: 0.8;
  }
}

.emoji-picker {
  position: absolute;
  bottom: 120%;
  /* places above the button */
  right: 0;
  /* align end of picker to button */
  transform: translateY(4px);
  /* small offset for animation */
  background: $background-light;
  border: 1px solid $border-light;
  border-radius: 8px;
  padding: 6px 10px;
  display: flex;
  flex-direction: row;
  /* horizontal */
  gap: $space-sm;
  white-space: nowrap;
  /* stay on one line */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease, transform 0.2s ease;
  z-index: 9999;
}

.emoji-picker.visible {
  opacity: 1;
  pointer-events: auto;
  transform: translateY(0);
}

.emoji-picker span {
  cursor: pointer;
  font-size: 20px;
  transition: transform 0.1s ease;
}

.emoji-picker span:hover {
  transform: scale(1.2);
}

.input-wrapper {
  flex-grow: 1;
  display: flex;
  align-items: center;
  background-color: $panel-bg-light;
  border: 1px solid $border;
  border-radius: $border-radius-lg;
  padding: $space-sm $space-md;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.comment-input {
  flex-grow: 1;
  border: none;
  outline: none;
  background: transparent;
  color: $text-light;
  font-size: 0.95rem;
  font-weight: $body-font-weight;

  &::placeholder {
    color: $muted-light;
  }
}

// --- DARK MODE STYLES ---
@media (prefers-color-scheme: dark) {
  .comment-input {
    color: $text-dark;

    &::placeholder {
      color: $muted-dark;
    }
  }

  .emoji-picker {
    background: $background-dark;
    border: 1px solid $border-dark;
  }

  .container {
    .Header {
      .infos {
        .time {
          color: $muted-dark; // Muted dark color for time
        }
      }

    }

    .input-wrapper {
      background-color: $panel-bg-dark;
      border-color: $border-dark;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    }

    .content {
      background-color: $panel-bg-dark; // Use a darker background that stands out from the main container background ($background-dark)
      color: $text-dark;
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2); // Darker shadow
    }
  }
}